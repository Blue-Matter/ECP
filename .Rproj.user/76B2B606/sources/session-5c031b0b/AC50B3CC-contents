

PPD_qplot = function(qs, Obs, Yrs, col, tcol = "red",tl = 2, tu = 7){

  ylim = range(qs,Obs,na.rm=T)
  matplot(Yrs,t(qs),col="white",ylim=ylim,xlab="",ylab="");  grid()
  nq = nrow(qs)
  keep=!is.na(qs[1,])
  for(i in 1:(nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs[i,keep],rev(qs[nq-i+1,keep])),col=col,border=NA)
  no = length(Obs)
  pcols = rep('black',no);
  ppch = rep(19,no); plwd=rep(1,no)
  condsim = apply(qs,2,sd)>0.01
  ppch[condsim] = 3; plwd[condsim]=3
  cond = Obs < qs[tl,] | Obs > qs[tu,]
  pcols[cond] = "red";  ppch[cond] = 3; plwd[cond]=3
  points(Yrs, Obs, col=pcols, pch=ppch, lwd=plwd)

}


# OMind = 1:48; Iind = 1; yind = 1:9

PPD_Proj = function(ECP_obj, Iplot = 1, OMind = 1:48, yind = 1:9,col,donam=T){

  PPD = ECP_obj$PPD
  ints = c(99,95,90,50)
  lps = ((100-ints)/2)/100
  ps = c(lps, rev(1-lps))

  qs = apply(PPD[,OMind,Iplot,yind,drop=F],4,quantile,p=ps,na.rm=T)
  Yrs = ECP_obj$First_Yr-1+yind
  Obs = ECP_obj$Obs[Iplot,yind]

  PPD_qplot(qs, Obs, Yrs, col=col)
  if(donam)mtext(dimnames(PPD)[[3]][Iplot],line=0.4,font=2,cex=0.85)

}

plot_marg_dens=function(ECP_obj,OMind=1:48, Iind=NULL,yind=1:7, col="#0000ff20"){
  if(is.null(Iind))Iind=ECP_obj$Defaults$Data

  ni = length(Iind)+1
  nc=ceiling(ni^0.5)
  nr=ceiling(ni/nc)
  par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.35,0.025),omi=c(0.3,0.3,0,0))
  for(i in 1:(ni-1))PPD_Proj(ECP_obj, Iplot = Iind[i], OMind = OMind, yind = yind,col=col)
  for(i in 1:((nr*nc)-ni+1))plot(1,1,col="white",xlab="",ylab="",axes=F,main="")
  coly = paste0("#0000ff",c(20,30,40,80))
  legend('left',fill = coly,cex=1.1,legend = c("99%","95%","90%","50%"),title = "Int. rng.",bty='n',border=coly)
  legend('right', pch = c(19,3,3),col=c('black','black','red'),cex=1.1,
         legend = c("Conditioning","Projection","Triggered"),title = "Obs. Data",bty='n')

  mtext('Year',1,line=0.5,outer=T,font=2)
  mtext('Index value',2,line=0.5,outer=T,font=2)

}

dens_Proj = function(ECP_obj, Iplot = 1, OMind = 1:48, yind = 1:6,tail="LB",alp=0.025,col,donam=T,fraclab=F){

  PPD = ECP_obj$PPD[,OMind,Iplot,yind,drop=F]
  nsim=dim(PPD)[1]
  ystoplot = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))>(nsim-1)})]
  Yrs = ECP_obj$First_Yr-1+yind
  Obs = ECP_obj$Obs[Iplot,yind]
  qs=apply(PPD[,,,yind],3,quantile,p=c(0.001,0.999),na.rm=T)
  plot(c(min(Yrs),max(Yrs)+1),range(qs,na.rm=T),col='white',xlab="",ylab="")
  T2textlevL = min(qs,na.rm=T)+(max(qs,na.rm=T)-min(qs,na.rm=T))*0.08

  for(yy in yind){
    if(yy %in% ystoplot){
      vec = as.vector(PPD[,,,yy])
      out = getcrit(vec,vec,tail,alp)
      crit=out[[1]]
      for(i in 1:length(crit))lines(Yrs[yy]+c(0,0.95),rep(crit[i],2),col="blue",lty=1)
      dens=densalator(vec)
      ys = 0.95*(dens$y / max(dens$y,na.rm=T))
      polygon(Yrs[yy]+ys,dens$x,col='#0000ff90',border=NA)
    }
    if(!is.na(Obs[yy])) lines(Yrs[yy]+c(0,0.95),rep(Obs[yy],2),lwd=3)
  }
  if(fraclab)text(Yrs[1]+1,T2textlevL,paste("Type I =",round(alp*100,2)),col="blue",cex=0.9)

  if(donam)mtext(dimnames(PPD)[[3]],line=0.4,font=2,cex=0.85)

}

getcrit = function(vec,vecalt,tail,alp){

  if(tail=="UB"){
    crit = quantile(vec,1-alp,na.rm=T)
    T2 = mean(vecalt<crit,na.rm=T)
  }else if(tail=="LB"){
    crit = quantile(vec,alp,na.rm=T)
    T2 = mean(vecalt>crit,na.rm=T)
  }else{
    crit = quantile(vec,c(alp/2,1-(alp/2)),na.rm=T)
    T2 = mean(vecalt>crit[1]&vecalt<crit[2],na.rm=T)
  }
  list(crit=crit,T2 = T2)

}


densalator = function(vec){

  if(all(vec>0,na.rm=T)){
    dens = density(log(vec),na.rm=T)
    dens$x = exp(dens$x)
  }else{
    dens = density(vec,na.rm=T)
  }
  dens
}

dens_Proj_pow = function(ECP_obj, Iplot = 1, OMind = 1:48, yind = 1:8, col, donam=T, powind=1,tail="LB",alp=0.025,fraclab=FALSE){

  PPD = ECP_obj$PPD[,OMind,Iplot,yind,drop=F]
  nsim=dim(PPD)[1]
  ystoplot = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))>(nsim-1)})]
  Yrs = ECP_obj$First_Yr-1+yind
  Obs = ECP_obj$Obs[Iplot,yind]
  qs=apply(PPD[,,,yind],3,quantile,p=c(0.0001,0.999),na.rm=T)
  T2textlev = min(qs,na.rm=T)+(max(qs,na.rm=T)-min(qs,na.rm=T))*0.92
  T2textlevL = min(qs,na.rm=T)+(max(qs,na.rm=T)-min(qs,na.rm=T))*0.08

  plot(c(min(Yrs),max(Yrs)+1),range(qs,na.rm=T),col='white',xlab="",ylab="")
  pow = array(ECP_obj$Pow[,OMind,powind],dim(PPD))
  if(fraclab)legend('topleft',legend=paste("% alt =",round(mean(pow)*100,1)),bty="n",cex=0.9)

  for(yy in yind){
    if(yy %in% ystoplot){
      PPDy = PPD[,,,yy]
      vecnull =as.vector(PPDy[!pow])# as.vector(PPDy[!pow])
      vecalt = as.vector(PPDy[pow])
      out = getcrit(vecnull,vecalt,tail,alp)
      crit=out[[1]]

      densnull=densalator(vecnull)
      ysnull = 0.95*(densnull$y / max(densnull$y,na.rm=T))
      for(i in 1:length(crit))lines(Yrs[yy]+c(0,0.95),rep(crit[i],2),col="blue",lty=1)

      densalt=densalator(vecalt)
      ysalt = 0.95*(densalt$y / max(densalt$y,na.rm=T))

      polygon(Yrs[yy]+ysnull,densnull$x,col='#0000ff90', border=NA)
      polygon(Yrs[yy]+ysalt, densalt$x, col='#ff000090', border=NA)

      #text(Yrs[yy]+0.6,quantile(vecalt,0.99,na.rm=T),round(out[[2]]*100,0),col="red",cex=0.8)
      text(Yrs[yy]+0.6,T2textlev,round(out[[2]]*100,0),col="red",cex=0.8,srt=-90)

    }
    if(!is.na(Obs[yy])) lines(Yrs[yy]+c(0,0.95),rep(Obs[yy],2),lwd=3)
  }
  text(Yrs[1]+0.6,T2textlev,"Type II =",col='red',cex=0.9)
  if(fraclab)text(Yrs[1]+1,T2textlevL,paste("Type I =",round(alp*100,2)),col="blue",cex=0.9)

  if(donam)mtext(dimnames(PPD)[[3]],line=0.4,font=2,cex=0.75)

}

plot_dist=function(ECP_obj =NULL, OMind=1:48, Iind=1:10, yind=1:8, powind=1, tail="LB", alp=0.025, legloc="left",nspc=3){

  #if(is.null(ECP_obj)|is.null(Iind)|is.null(OMind)|is.null(yind)|is.null(powind)|is.null(tail)|is.null(alp)){
  #  plot.new()
  #}else{

    if(tail[1]=="auto")tail=autotail(ECP_obj, OMind, Iind, yind, powind)
    if(length(tail)==1)tail=rep(tail,length(Iind))

    if(is.null(Iind))Iind=ECP_obj$Defaults$Data
    ni = length(Iind)
    nc=ceiling(ni^0.5)
    nr=ceiling(ni/nc)
    par(mfrow=c(nr,nc),mai=c(0.25,0.3,0.3,0.025),omi=c(0.15,0.1,0,0))

    for(i in 1:ni){

      if(is.na(powind)){
        dens_Proj(ECP_obj, Iplot = Iind[i], OMind = OMind, yind = yind,tail=tail[i],alp=alp,col=col,fraclab=(i==1))
      }else{
        dens_Proj_pow(ECP_obj, Iplot = Iind[i], OMind = OMind, yind = yind,col=col,powind=as.numeric(powind),tail=tail[i],alp=alp,fraclab=(i==1))
      }
      if(i==1){
        if(is.na(powind))legend(legloc,cex=1,legend = c(rep(".",nspc),"Predicted","Observed"),text.col=c(rep("white",nspc),"#0000ff95",'black'),text.font=2,bty='n')
        if(!is.na(powind))legend(legloc,cex=1,legend = c(rep(".",nspc),"Null","Alternative","Observed"),text.col=c(rep("white",nspc),"#0000ff95","#ff000095",'black'),text.font=2,bty='n')
      }
    }

    #for(i in 1:((nr*nc)-ni+1))plot(1,1,col="white",xlab="",ylab="",axes=F,main="")
  #} # end of is NULL ecp_obj
}


do_stz=function(ECP_obj,Iind,OMind){

  PPDs0=ECP_obj$PPD[,OMind,Iind,,drop=F]
  obs0 = ECP_obj$Obs[Iind,,drop=F]

  # log if all positive
  for(i in 1:length(Iind)){
    if(all(PPDs0[,,i,]>0,na.rm=T)){
      PPDs0[,,i,]=log(PPDs0[,,i,])
      obs0[i,]=log(obs0[i,])
    }
  }
  PPDs1 = PPDs2 = PPDs0

  dims = dim(PPDs0)
  sds=apply(PPDs0,3:4,sd)
  mus=apply(PPDs0,3:4,mean)
  PPDs1 = PPDs0-array(rep(mus,each=prod(dims[1:2])),dims)
  PPDs2 = PPDs1/array(rep(sds,each=prod(dims[1:2])),dims)
  obs2 = (obs0-mus)/sds

  ni=length(Iind)
  for(i in 1:ni){
    PD = PPDs2[,,i,]
    Ob = obs2[i,]
    makeNA = !(PD[1,1,]!=0 & !is.na(PD[1,1,]) & !is.na(Ob))
    PPDs2[,,i,makeNA]= NA
    obs2[i,makeNA] = NA
  }

  list(PPDs = PPDs2,Obss = obs2)

}

PPD_qplot_stz = function(ps, qs,Obss, Yrs, yind, col,adj,rand){

  ylim = range(qs,Obss,na.rm=T)
  matplot(Yrs,t(qs),col="white",ylim=ylim,xlab="",ylab="") #;  grid()
  #abline(h=0,lty=2)
  refs = qnorm(ps,0,1)
  #abline(h=refs,lty=2)

  np = length(ps)
  ny=length(Yrs)
  #keep=!is.na(qs[1,])
  #for(i in 1:(nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs[i,keep],rev(qs[nq-i+1,keep])),col=col,border=NA)
  for(i in 1:(np/2))  polygon(c(Yrs,rev(Yrs)),c(rep(refs[i],ny),rep(refs[np-i+1],ny)),col=col,border=NA)

  ni=nrow(Obss)
  pchs = rep(c(1,3,6,18),each = 4)
  cols = rep(c("black","red","green","blue"),4)
  yrand = rep(0,ni)
  if(rand)yrand=runif(ni,-0.1,0.1)
  for(i in 1:ni){
    ob1 = Obss[i,yind]
    ys = (1:length(ob1))[!is.na(ob1)]
    points(Yrs,ob1,col=cols[i],pch=pchs[i],cex=1.25,lwd=3)
    lines(Yrs,ob1,col=cols[i])
    hasval=!is.na(ob1)
    maxy = max(Yrs[hasval])
    lastob = ob1[match(maxy,Yrs)]
    text(maxy+adj,lastob+yrand[i],dimnames(Obss)[[1]][i],col=cols[i],font=2,cex=0.9)
  }

}

PPD_stz = function(PPDs, Obss, yind = 2:6, col,adj,rand){
  ints = c(99,95,90,50)
  lps = ((100-ints)/2)/100
  ps = c(lps, rev(1-lps))
  qs = apply(PPDs[,,,yind, drop=F], 4, quantile, p=ps, na.rm=T)
  Yrs = ECP_obj$First_Yr-1 + yind
 ints = c(99,95,90,50)
  lps = ((100-ints)/2)/100
  ps = c(lps, rev(1-lps))
  qs = apply(PPDs[,,,yind, drop=F], 4, quantile, p=ps, na.rm=T)
  Yrs = ECP_obj$First_Yr-1 + yind
  PPD_qplot_stz(ps, qs,Obss, Yrs, yind, col=col,adj=adj,rand=rand)
  #PPD_qplot_stz(ps, qs,Obss, Yrs, yind, col=col)
}

plot_all_marg_dens=function(ECP_obj,OMind=1:48, Iind=NULL,yind=2:6, col="#0000ff20",adj=1,seed=1,rand=F){

  set.seed(seed)
  layout(matrix(c(1,2),nrow=1),widths=c(1,0.35))
  par(mai=c(0.8,0.8,0.01,0.01))
  if(is.null(Iind))Iind=ECP_obj$Defaults$Data
  stz = do_stz(ECP_obj,Iind,OMind)
  PPD_stz(PPDs = stz$PPDs,Obss = stz$Obss,yind,col,adj=adj,rand=rand)
  mtext('Year',1,line=2.5,outer=F,font=2)
  mtext('Standardized log index value',2,line=2.5,outer=F,font=2)
  plot(1,1,col="white",xlab="",ylab="",axes=F,main="")
  coly = paste0("#0000ff",c(20,30,40,80))
  legend('center',fill = coly,cex=0.9,legend = c("99%","95%","90%","50%"),title = "Interquant. rng.",bty='n',border=coly)

}




plot_CC<-function(ECP_obj,quanty=0.5,ptcex=0.6,maxn=10,OMind=1:48, Iind=NULL,powind=1,dopow=F){

  if(is.null(Iind))Iind=ECP_obj$Defaults$Data

  out=get_pred_sim(ECP_obj,OMind,Iind,powind)
  preds=out$preds
  obs=out$obs
  nams=out$nams
  pows=out$pows
  ndat = dim(preds)[2]
  ni <- min(ndat,maxn)
  cols <- c("#0000ff15","black","#ff000045")
  par(mfrow=c(ni-1,ni-1),mai=rep(0,4),omi=c(0.55,0.75,0.05,0.05))
  cutoff= c(quanty/100,(100-quanty)/100)

  for(i in 2:ni){

    for(j in 1:(ni-1)){

      if(j==i|j>i){

        plot(1,1,col='white',axes=F)

      }else{

        xlim<-range(quantile(preds[,j],cutoff,na.rm=T),obs[j])
        ylim<-range(quantile(preds[,i],cutoff,na.rm=T),obs[i])

        if(!dopow){
          plot(preds[,j],preds[,i],pch=19,xlim=xlim,ylim=ylim,cex=ptcex,col=cols[1],axes=F)
        }else{
          plot(preds[!pows,j],preds[!pows,i],pch=19,xlim=xlim,ylim=ylim,cex=ptcex,col=cols[1],axes=F)
          points(preds[pows,j],preds[pows,i],pch=19,cex=ptcex,col=cols[3])
        }

        axis(1,c(-100,100))
        axis(2,c(-100,100))
        axis(3,c(-100,100))
        axis(4,c(-100,100))
        points(obs[j],obs[i],pch=19,cex=1.2,col=cols[2])

      }
      if(i==2&j==(ni-1)){
        legend('center',legend=c("Obs","Sim"),text.col=c("black","blue"),bty='n')

      }

      if(j==1)mtext(nams[i],2,line=2,cex=0.6,las=2)
      if(i==ni)mtext(nams[j],1,line=1,cex=0.6,las=2)
      #if(j==1)mtext(i,2,line=2,cex=0.5,las=2)
      #if(i==nplotted)mtext(j,1,line=1,cex=0.5,las=2)

    }

  }

}



# power analysis versions

PPD_qplot_pow = function(qs_null,qs_alt, Obs, Yrs, cols,line,plotcrit){

  ylim = range(qs_null,qs_alt,Obs,na.rm=T)
  matplot(Yrs,t(qs_null),col="white",ylim=ylim,xlab="",ylab="");  grid()
  nq = nrow(qs_null)

  if(!line){
    keep=!is.na(qs_null[1,])
    for(i in 1:(nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs_null[i,keep],rev(qs_null[nq-i+1,keep])),col=cols[1],border=NA)
    keep=!is.na(qs_alt[1,])
    for(i in 1:(nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs_alt[i,keep],rev(qs_alt[nq-i+1,keep])),col=cols[2],border=NA)
  }else{

    keep=!is.na(qs_null[1,])
    for(i in (nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs_null[i,keep],rev(qs_null[nq-i+1,keep])),col=cols[1],border=NA)
    keep=!is.na(qs_alt[1,])
    for(i in (nq/2))  polygon(c(Yrs[keep],rev(Yrs[keep])),c(qs_alt[i,keep],rev(qs_alt[nq-i+1,keep])),col=cols[2],border=NA)

    for(i in 1){
      keep=!is.na(qs_null[1,])
      lines(Yrs[keep],qs_null[i,keep],col="blue",lwd=1)
      lines(Yrs[keep],qs_null[nq-i+1,keep],col="blue",lwd=1)
      keep=!is.na(qs_alt[1,])
      lines(Yrs[keep],qs_alt[i,keep],col="red",lwd=1)
      lines(Yrs[keep],qs_alt[nq-i+1,keep],col="red",lwd=1)
    }
  }
  if(!is.null(plotcrit))lines(Yrs[keep],qs_null[plotcrit,keep])

  points(Yrs,Obs,pch=19)

}



PPD_Proj_pow = function(ECP_obj, Iplot = 1, OMind = 1:48, yind = 1:9,powind=1,cols,line,plotcrit){

  PPDnull = PPDalt = ECP_obj$PPD
  ints = c(99,95,90,50)
  lps = ((100-ints)/2)/100
  ps = c(lps, rev(1-lps))

  powSwitch = array(ECP_obj$Pow[,,powind],dim(PPDnull))

  PPDnull[powSwitch]=NA
  PPDalt[!powSwitch]=NA

  qs_null = apply(PPDnull[,OMind,Iplot,yind,drop=F],4,quantile,p=ps,na.rm=T)
  qs_alt = apply(PPDalt[,OMind,Iplot,yind,drop=F],4,quantile,p=ps,na.rm=T)

  Yrs = ECP_obj$First_Yr-1+yind
  Obs = ECP_obj$Obs[Iplot,yind]

  PPD_qplot_pow(qs_null,qs_alt, Obs, Yrs,cols=cols,line=line,plotcrit=plotcrit)
  mtext(dimnames(PPDnull)[[3]][Iplot],line=0.4,font=2,cex=0.85)

}


plot_marg_dens_pow=function(ECP_obj,OMind=1:48, Iind=NULL,yind=1:7,
                            powind=2,cols=c("#0000ff20","#ff000020"),line=F,plotcrit=2){

  if(is.null(Iind))Iind=ECP_obj$Defaults$Data
  ni = length(Iind)+1
  nr=ceiling(ni^0.5)
  nc=ceiling(ni/nr)
  par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.35,0.025),omi=c(0.3,0.3,0,0))

  for(i in 1:(ni-1))    PPD_Proj_pow(ECP_obj, Iplot = Iind[i], OMind = OMind, yind = yind,powind=powind,cols=cols,line=line,plotcrit=plotcrit)
  for(i in 1:((nr*nc)-ni+1))plot(1,1,col="white",xlab="",ylab="",axes=F,main="")
  coly = paste0("#0000ff",c(20,30,40,80))
  colyp = paste0("#ff0000",c(20,30,40,80))

  legend('left',fill = coly,cex=1.1,legend = c("99%","95%","90%","50%"),title = "Null", bty='n',border=coly)
  legend('right',fill = colyp,cex=1.1,legend = c("99%","95%","90%","50%"),title = "Alt", bty='n',border=colyp)
  mtext('Year',1,line=0.5,outer=T,font=2)
  mtext('Index value',2,line=0.5,outer=T,font=2)
}


pcalc = function(qsa,PPDn,PPDa,tail,qsa2=NULL){

  if(tail=="LB"){
    T1 = mean(apply(PPDn<qsa,1:2,sum)>0,na.rm=T)
    T2 = 1-mean(apply(PPDa<qsa,1:2,sum)>0,na.rm=T) # all indices have to not have been triggered
  }else if(tail=="UB"){
    T1 = mean(apply(PPDn>qsa,1:2,sum)>0,na.rm=T)
    T2 = 1-mean(apply(PPDa>qsa,1:2,sum)>0,na.rm=T) # all indices have to not have been triggered
  }else{
    ni=dim(qsa)[3]
    T1 = mean(apply(PPDn<qsa | PPDn>qsa2 ,1:2,sum),na.rm=T)
    T2 = mean(apply(PPDa>qsa & PPDa<qsa2 ,1:2,sum)==ni,na.rm=T) # all indices have to not have been triggered
  }

  c(T1=T1,T2=T2)

}

pcalc2 = function(PPDn,PPDa,alp,tail){

  ni = dim(PPDn)[3]
  erri = rep(NA,ni)

  trig1 = array(FALSE, dim(PPDn)[1:2])
  #trig1[is.na(PPDn[,,1,1])]=NA

  trig2 = array(TRUE,  dim(PPDn)[1:2]) # issue is here
  #trig2[is.na(PPDa[,,1,1])]=NA

  for(i in 1:ni){

    if(tail[i]=="LB"){

      crit = quantile(PPDn[,,i,1],alp,na.rm=T)
      trig1[] = trig1[] | (PPDn[,,i,1]<crit)
      trig2[] = trig2[] & (PPDa[,,i,1]>crit)

    }else if(tail[i]=="UB"){

      crit = quantile(PPDn[,,i,1],1-alp,na.rm=T)
      trig1[] = trig1[] | (PPDn[,,i,1]>crit)
      trig2[] = trig2[] & (PPDa[,,i,1]<crit)

    }else{

      critLB = quantile(PPDn[,,i,1],alp/2,na.rm=T)
      critUB = quantile(PPDn[,,i,1],1-(alp/2),na.rm=T)
      trig1[] = trig1[] | ((PPDn[,,i,1] < critLB) | (PPDn[,,i,1] > critUB))
      trig2[] = trig2[] & ((PPDa[,,i,1] > critLB) & (PPDa[,,i,1] < critUB))

    }

  }

  #trig2c = trig2 == 0
  c(mean(trig1,na.rm=T),mean(trig2,na.rm=T))

}


plot_Err = function(Err,Iind,powind,alp,main){

  if(is.na(powind))Err[2,]=NA
  Err2=Err
  Err2[1,]=1-Err[1,]
  Err2[is.na(Err2)]=1
  Err3=1-apply(Err2,1,cumprod)# total Type I error/ power
  if(is.na(powind))Err3[,2]=NA
  Err3[Err3[,1]==0,]=NA

  ys = colnames(Err)
  par(mfrow=c(1,2),mai=c(0.4,0.4,0.05,0.05),omi=c(0.4,0.4,0.3,0.01))
  matplot(ys,t(Err),col="white",lty=1,type="l",xlab="",ylab="",ylim=c(0,1))
  grid()
  matplot(ys,t(Err),col=c("blue","red"),lty=1,type="l",add=T,lwd=2)
  if(!is.na(powind))legend('topright',legend=c("Type I","Type II"),text.col=c("blue","red"),bty="n")
  if(is.na(powind))legend('topright',legend=c("Type I"),text.col=c("blue"),bty="n")

  matplot(ys,Err3,col="white",lty=1,type="l",xlab="",ylab="",ylim=c(0,1))
  grid()
  matplot(ys,Err3,col=c("blue","red"),lty=1,type="l",add=T,lwd=2)
  if(!is.na(powind))legend('topleft',legend=c("Cumu. Type I","Cumu. Power"),text.col=c("blue","red"),bty="n")
  if(is.na(powind))legend('topleft',legend=c("Cumu. Type I"),text.col=c("blue"),bty="n")

  mtext("Rate",side=2,line=0.5,outer=T)
  mtext("Year",side=1,line=0.5,outer=T)
  if(!is.na(powind)){if(main){mtext(paste0("I = ",paste(Iind,collapse=","),"; Pow = ",powind,"; alpha =",alp),line=0.15,outer=T)}}
  if(is.na(powind)){if(main){mtext(paste0("I = ",paste(Iind,collapse=","),"; alpha =",alp),line=0.15,outer=T)}}

}

# What if we ran it through all the years
Seq_Pow_Calc_Marg = function(ECP_obj, OMind = 1:48, Iind=NULL, yind=1:8, powind=1, alp=0.025, tail = "LB",plot=T,main=T){

  if(tail[1]=="auto")tail=autotail(ECP_obj, OMind, Iind, yind, powind)
   if(is.null(Iind))Iind=ECP_obj$Defaults$Primary$Data
   if(length(tail)==1)tail=rep(tail,length(Iind))

  if(!is.na(powind[1])){

    PPD = PPDalt = PPDnull = ECP_obj$PPD[,OMind,Iind,yind,drop=F]
    pow = ECP_obj$Pow[,OMind,powind]
    nsim=dim(PPD)[1]
    ystodo = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))>(nsim-1)})]
    Yrs = ECP_obj$First_Yr-1+yind
    Obs = ECP_obj$Obs[Iind,yind]
    qs=apply(PPD[,,,yind],3,quantile,p=1-alp,na.rm=T)

    #if(plot) plot(c(min(Yrs),max(Yrs)+1),c(0,1.05),col='white',xlab="",ylab="")
    dims=dim(PPD)
    nsim=dims[1]
    ny = dims[4]
    nOM = dims[2]

    nI = length(Iind)
    Err = array(NA,c(2,ny))
    rownames(Err) = c("Type I","Type II")
    colnames(Err) = colnames(ECP_obj$Obs)[1:max(ystodo)]

    powSwitch = array(pow,dim(PPD))
    PPDnull[powSwitch]=NA
    PPDalt[!powSwitch]=NA
    #qst = array(NA,c(nI,ny))

    #if(!tail%in%c("LB","UB"))qst=array(NA,c(2,nI,ny))
    for(yy in ystodo){
      PPDn=PPDnull[,,,yy,drop=F]
      PPDa=PPDalt[,,,yy,drop=F]
      Err[,yy] = pcalc2(PPDn, PPDa, alp, tail)
    }

    if(plot)plot_Err(Err,Iind,powind,alp,main)
    Err
  }else{

    PPD = PPDalt = PPDnull = ECP_obj$PPD[,OMind,Iind,yind,drop=F]
    nsim=dim(PPD)[1]
    ystodo = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))>(nsim-1)})]
    Yrs = ECP_obj$First_Yr-1+yind
    Obs = ECP_obj$Obs[Iind,yind]
    qs=apply(PPD[,,,yind],3,quantile,p=1-alp,na.rm=T)


    #if(plot) plot(c(min(Yrs),max(Yrs)+1),c(0,1.05),col='white',xlab="",ylab="")
    dims=dim(PPD)
    nsim=dims[1]
    ny = dims[4]
    nOM = dims[2]
    nI = length(Iind)
    Err = array(NA,c(2,ny))
    rownames(Err) = c("Type I","Type II")
    colnames(Err) = colnames(ECP_obj$Obs)[1:max(ystodo)]

    for(yy in ystodo){
      PPDn=PPDnull[,,,yy,drop=F]
      PPDa=PPDalt[,,,yy,drop=F]
      Err[,yy] = pcalc2(PPDn, PPDa, alp, tail)
    }

    if(plot)plot_Err(Err,Iind,powind,alp,main)
    Err
    #plot(1,1,col="white",axes=F,xlab="",ylab="",main="")
  }
}

codegone<-function(){
  if(tail == "LB"){
    qs=apply(PPDnull[,,,yy,drop=F],3,quantile,p=alp,na.rm=T)
    qst[,yy]= qs
    qsa = array(rep(qs,each=nsim*nOM),c(nsim,nOM,nI,1))
    Err[,yy] = pcalc(qsa,PPDn,PPDa,tail)

  }else if(tail == "UB"){
    qs=apply(PPD[,,,yy,drop=F],3,quantile,p=1-alp,na.rm=T)
    qst[,yy]= qs
    qsa = array(rep(qs,each=nsim*nOM),c(nsim,nOM,nI,1))
    Err[,yy] = pcalc(qsa,PPDn,PPDa,tail)

  }else{
    qs=apply(PPD[,,,yy,drop=F],3,quantile,p=c(alp/2,1-(alp/2)),na.rm=T)
    qst[,,yy]= qs
    qsa = array(rep(qs[1,],each=nsim*nOM),c(nsim,nOM,nI))
    qsa2 = array(rep(qs[2,],each=nsim*nOM),c(nsim,nOM,nI))
    Err[,yy] = pcalc(qsa,PPDn,PPDa,tail,qsa2=qsa2)
  }
}

Seq_Pow_Calc_MV=function(ECP_obj, OMind = 1:48, Iind=NULL, yind=1:8, powind=1, alp=0.025, LB=FALSE){

  if(is.null(Iind))Iind=ECP_obj$Defaults$Data

  ny = length(yind)
  nI = length(Iind)
  PPD = ECP_obj$PPD[,OMind,Iind,yind,drop=F]
  #pows = ECP_obj$Pow[,OMind,powind]
  nsim=dim(PPD)[1]
  ystodo = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))>(nsim-1)})]
  Err = array(NA,c(2,ny))
  rownames(Err) = c("Type I","Type II")
  colnames(Err) = colnames(ECP_obj$Obs)[1:max(ystodo)]

  for(yub in ystodo){

    yvind = 1:yub
    out=get_pred_sim_yr(ECP_obj,OMind,Iind,yind=yvind,powind=powind)
    preds=out$preds
    obs=out$obs
    pows=out$pows
    yrs=out$yrs
    nullcov<-cov(preds)
    nullm<-apply(preds,2,mean,na.rm=T)
    dists<-mahalanobis_robust(x=preds, center=nullm, cov=nullcov)
    alp2 = alp

    if(LB){ # if joint LB
      up = preds>array(rep(nullm,each=nrow(preds)),dim(preds))
      jointUB = apply(up,1,all)
      dists[jointUB] = NA
      fracLB = mean(!jointUB)
      alp2 = alp/fracLB
    }

    thresh<-quantile(dists[!pows],1-alp2,na.rm=T)
    Err[1,yub] = alp #mean(dists[!pows]>thresh,na.rm=T)
    Err[2,yub] = mean(dists[pows]<thresh,na.rm=T)

  }

  plot_Err(Err,Iind)
  Err

}

dohelp = function(alp_rng){
  ahigh = alp_rng[1]+(alp_rng[2]-alp_rng[1])*0.9
  text(ahigh,-0.02,"BETTER",font=2,col="#0000ff20")
  arrows(ahigh,0.07,ahigh,0.01,col="#0000ff20",lwd=2,length=0.1)
  text(ahigh,1.02,"BETTER",font=2,col="#ff000020",cex=0.9)
  arrows(ahigh,0.93,ahigh,0.99,col="#ff000020",lwd=2,length=0.1)
}

EPTO = function(ECP_obj,OMind = 1:48, Iind=NULL, yind=1:8, powind=1, tail = "LB",
                alp_rng = c(0.001,0.05),res = 20,ys=c(3,6), plot=T){

  nys=length(ys)
  errarr = array(NA,c(nys,res,2))

  as = seq(alp_rng[1], alp_rng[2], length.out=res)
  for(i in 1:res){

    Err = Seq_Pow_Calc_Marg(ECP_obj, OMind = OMind, Iind=Iind, yind=yind, powind=powind, alp=as[i], tail = tail,plot=F)
    Err2=Err
    Err2[1,]=1-Err[1,]
    Err2[is.na(Err2)]=1
    Err3=1-apply(Err2,1,cumprod)# total Type I error/ power
    errarr[,i,] = Err3[ys+2,] # need to fix this!!

  }

  if(plot){
    par(mfrow=c(1,2),mai=c(0.3,0.5,0.3,0.01),omi=c(0.5,0.3,0.01,0.01))
    for(i in 1:nys){
      plot(alp_rng,c(0,1),col="white")
      grid()
      matplot(as,errarr[i,,],type="l",col=c("blue","red"),add=T,lty=1)
      mtext(paste("Projection year",ys[i]),line=0.4)
      if(i==1)legend('topleft',legend=c("Cml. Type I Err.","Cml. Power"),text.col=c("blue","red"),bty='n')
      dohelp(alp_rng)

    }

    mtext("Per index Type I error",1,outer=T,line=0.9)
    mtext("Cumulative Type I error / Power",2,outer=T,line=0.2)
  }

  errarr

}

autotail=function(ECP_obj, OMind, Iind, yind, powind){

  PPD = PPDalt = PPDnull = ECP_obj$PPD[,OMind,Iind,yind,drop=F]
  nsim=dim(PPD)[1]
  ystona = yind[apply(PPD,4,function(x){length(unique(as.vector(x)))<(nsim-1)})]

  pow = ECP_obj$Pow[,OMind,powind]
  powSwitch = array(pow,dim(PPD))
  PPDnull[powSwitch]=NA
  PPDalt[!powSwitch]=NA
  PPDnull[,,,ystona] = NA
  PPDalt[,,,ystona]=NA
  mu_null=apply(PPDnull,3:4,mean,na.rm=T)
  mu_alt = apply(PPDalt,3:4,mean,na.rm=T)

  sums = apply(mu_alt > mu_null,1,mean,na.rm=T)
  c("LB","UB")[1+as.integer(sums>0.5)]

}
